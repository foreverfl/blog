- hosts: web
  become: true
  vars:
    redis_host: "{{ lookup('env', 'REDIS_HOST') }}"
    redis_port: "{{ lookup('env', 'REDIS_PORT') }}"
    env_path: "/home/ubuntu/app/blog/.env.prod"
  tasks:
    - name: Ensure REDIS_HOST is set to the new value
      lineinfile:
        path: "{{ env_path }}"
        regexp: '^REDIS_HOST='
        line: "REDIS_HOST={{ redis_host }}"
        state: present
        create: yes

    - name: Ensure REDIS_PORT is set to the new value
      lineinfile:
        path: "{{ env_path }}"
        regexp: '^REDIS_PORT='
        line: "REDIS_PORT={{ redis_port }}"
        state: present
        create: yes

    - name: Copy .env.prod to .env (latest)
      shell: cp /home/ubuntu/app/blog/.env.prod /home/ubuntu/app/blog/.env

    - name: Stop existing container
      shell: docker rm -f blog || true

    - name: Get latest blog image tag
      shell: docker images blog --format "{{ '{{.Tag}}' }}" | head -n 1
      register: latest_blog_tag

    - name: Run new container (use latest tag)
      shell: |
        docker run -d \
          --name blog \
          --restart always \
          -p 3000:3000 \
          -v /home/ubuntu/app/blog/.env:/app/.env \
          blog:{{ latest_blog_tag.stdout }}